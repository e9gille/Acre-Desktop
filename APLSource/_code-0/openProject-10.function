 openProject←{⍺←⊢ ⋄ top←1≡⍺ 1 ⍝ monad from sharedMethod - dyad is subsid
     2<≢1⊃what proj←⍵:0⊣showMsg MS.DM,SX.⍎1⊃⎕SI
     which←⊃MS.ER MS.EQ/⍨open load←MS.FW MS.FY∊⊂what
     null⊢src←{getFolder'/'}if null⊃src tgt←2↑proj:{
         0}showMsg open⊃SX.(LoadProject OpenProject)
     dat.changed←''⊣dat.loadtime←DT.ts2dt ⎕TS⊣dat←⎕NS''
     dat.folder←fPath src,'/'
     dat.(config source code changes sourcereg)←{
         ⍵}dat.folder∘,¨MS.HM MS.GY,MS.HL∘,¨''MS.EU MS.HF
     ~∨/2⍴src cnf cde←⎕NEXISTS¨dat.(source config changes):{
         0}showMsg MS.HB,' ',¯30 UT.tm dat.folder
     z←'dat'⎕NS UT.lc⊢cfg←readConfig dat.config
     nspath←{'/'UT.nn ¯1↓dat.folder}if null dat.projectspace if null tgt
     ~((1=≢)∨0∘ss∨0=⎕NC)dat.nspath←⊃prefSpace nspath:{
         0}showMsg MS.DC
     ~dat openLoad open:0 ⍝ load subsids

     z←showMsg(which,MS.EY),dat.folder
     space←⍎dat.nspath #.⎕NS''⊣openProjects⊣⎕EX{# UT.nl⍳10}if≢dat.nspath
     cfg.KeepHistory←MS.GB MS.GA⊃⍨dat.hist←≢/CC dat.keephistory MS.GB
     cfg.CaseCode←MS.GB MS.GA⊃⍨dat.case←≢/CC dat.casecode MS.GB
     space.AcreConfig←cfg⊣cfg.ProjectFolder←dat.folder
     z←showMsg MS.EZ,dat.nspath
     z←deleteFolder⍣(cde>dat.hist)⊢dat.code
     z←⎕MKDIR/3,⍪dat.(source changes)/⍨(~src),cde<dat.hist
     z←MS.AB∘⎕NPUT if(~⎕NEXISTS)dat.folder,MS.FM  ⍝ git specific -
     z←dat getSource'' ⍝ gets, fixes, writes chgs and dels
     dat.changed←dat changes''
     z←space∘{0::⊢showMsg UT.bx MS.DN,MS.DP,⍵
         ⊢⍺.⍎UT.ep ⍵}if(open∧top>null)dat.startup
     dat⊣dat.loadtime,←DT.ts2dt ⎕TS
⍝ ⍵ ('Open'|'Load') folder
⍝ ← dat or 0 - see OpenProject LoadProject CreateProject
⍝ Phil 2018-01-28 00.15
 }
